#version 450

in vec2 texCoords;

uniform sampler2D screenTexture;

out vec4 color;


const float offset = 1.0f/300.0f;
void main()
{
	//color = vec4(1.0f,0.0f,0.0f,1.0f);
	//normal texture
	color = texture(screenTexture,texCoords);
	//inverted
	//color = vec4(vec3(1.0f - texture(screenTexture,texCoords)),1.0f);
	//Grayscale
	//color = texture(screenTexture,texCoords);
	//float avg = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;
	//color = vec4(avg,avg,avg,1.0f);
	
	//Sharpen
	vec2 offsets[9] = vec2[](
        vec2(-offset, offset),  // top-left
        vec2(0.0f,    offset),  // top-center
        vec2(offset,  offset),  // top-right
        vec2(-offset, 0.0f),    // center-left
        vec2(0.0f,    0.0f),    // center-center
        vec2(offset,  0.0f),    // center-right
        vec2(-offset, -offset), // bottom-left
        vec2(0.0f,    -offset), // bottom-center
        vec2(offset,  -offset)  // bottom-right    
    );

    float kernel[9] = float[](
        -1, -1, -1,
        -1,  9, -1,
        -1, -1, -1
    );
	float blur[9] = float[](
		1.0/16.0, 2.0/16.0, 1.0/16.0,
		2.0/16.0, 4.0/16.0, 2.0/16.0,
		1.0/16.0, 2.0/16.0, 1.0/16.0
	);
	
	vec3 sampleTex[9];
	for(int i = 0;i < 9;i++)
	{
		sampleTex[i] = vec3(texture(screenTexture,texCoords.st + offsets[i]));
	}
	vec3 col = vec3(0.0f);
	for(int i = 0;i < 9;i++)
	{
		col += sampleTex[i] * blur[i];
	}
	
	//color = vec4(col,1.0f);
}

